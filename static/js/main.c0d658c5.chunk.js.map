{"version":3,"sources":["components/Header.js","components/About.js","components/Portfolio.js","components/Resume.js","components/Testimonials.js","components/common/Input.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","key","url","target","Component","About","src","alt","aboutme","Porfolio","portfolio","rel","concat","link","imgurl","description","Testimonials","testimonials","Input","type","value","onChange","handleChange","placeholder","ContactUs","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","email","msg","loading","e","preventDefault","userData","setState","fetch","method","body","JSON","stringify","headers","Accept","Content-Type","then","response","console","log","_this2","common_Input","onClick","handleSubmit","Footer","imagebaseurl","linkedinId","skypeid","address","website","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","skillsDescription","skills","skillname","App","Header_Header","About_About","Portfolio_Porfolio","Testimonials_Testimonials","ContactUs_ContactUs","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0d658c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n             {/* <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li> */}\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n               <li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li>\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">I am {resumeData.name}.</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>I am a {resumeData.role}.{resumeData.roleDescription}\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from \"react\";\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n        <div className=\"row\">\n          <div className=\"five columns\">\n            <img className=\"profile-pic\" src=\"images/profilepic.jpg\" alt=\"\" />\n          </div>\n\n          <div className=\"seven columns main-col\">\n            <h2>About Me</h2>\n            <p>{resumeData.aboutme}</p>\n\n            {false && (\n              <div className=\"row\">\n                <div className=\"columns contact-details\">\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n                    <span>{resumeData.name}</span>\n                    <br />\n                    <span>{resumeData.address}</span>\n                    <br />\n                    <span>{resumeData.website}</span>\n                  </p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>Some of My Independent Projects.</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div id=\"portfolio-wrapper\" className=\"cf\">\n            {resumeData.portfolio &&\n              resumeData.portfolio.map(item => {\n                return (\n                  <div className=\"portfolio-item\">\n                    <a\n                      className=\"five columns item-wrap\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      href={`${item.link}`}\n                    >\n                      <div className=\"\">\n                        <div className=\"item-wrap\">\n                          <img\n                            alt={\"Portfolio\"}\n                            src={`${item.imgurl}`}\n                            className=\"item-img\"\n                          />\n                          <div className=\"overlay\">\n                            <div className=\"portfolio-item-meta\">\n                              <h2 className=\"live\">\n                                <i className=\"fa fa-external-link\" /> Live\n                              </h2>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </a>\n                    <div className=\"seven columns item-wrap\">\n                      <h1>{item.name}</h1>\n                      <p>{item.description}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nexport default class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n        <div className=\"row\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Education</span>\n            </h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {resumeData.education &&\n              resumeData.education.map(item => {\n                return (\n                  <div className=\"row item\">\n                    <div className=\"twelve columns\">\n                      <h3>{item.UniversityName}</h3>\n                      <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span>{\" \"}\n                        <em className=\"date\">\n                          {item.MonthOfPassing} {item.YearOfPassing}\n                        </em>\n                      </p>\n                      <p>{item.Achievements}</p>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n        {false && (\n          <div className=\"row work\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Work</span>\n              </h1>\n            </div>\n            <div className=\"nine columns main-col\">\n              {resumeData.work &&\n                resumeData.work.map(item => {\n                  return (\n                    <div className=\"row item\">\n                      <div className=\"twelve columns\">\n                        <h3>{item.CompanyName}</h3>\n                        <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span>{\" \"}\n                          <em className=\"date\">\n                            {item.MonthOfLeaving} {item.YearOfLeaving}\n                          </em>\n                        </p>\n                        <p>{item.Achievements}</p>\n                      </div>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        )}\n\n        {false && (\n          <div className=\"row skill\">\n            <div className=\"three columns header-col\">\n              <h1>\n                <span>Skills</span>\n              </h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              <p>{resumeData.skillsDescription}</p>\n\n              <div className=\"bars\">\n                <ul className=\"skills\">\n                  {resumeData.skills &&\n                    resumeData.skills.map(item => {\n                      return (\n                        <li>\n                          <span\n                            className={`bar-expand ${item.skillname.toLowerCase()}`}\n                          />\n                          <em>{item.skillname}</em>\n                        </li>\n                      );\n                    })}\n                </ul>\n              </div>\n            </div>\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class Testimonials extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"testimonials\">\n        <div className=\"text-container\">\n          <div className=\"row\">\n            <div className=\"two columns header-col\">\n              <h1><span>Client Testimonials</span></h1>\n            </div>\n            <div className=\"ten columns flex-container\">\n              <div className=\"flexslider\">\n                <ul className=\"slides\">\n                  {\n                    resumeData.testimonials && resumeData.testimonials.map((item)=>{\n                      return(\n                        <li>\n                          <blockquote>\n                            <p>\n                            {item.description}\n                            </p>\n                            <cite>{item.name}</cite>\n                          </blockquote>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div> {/* div.flexslider ends */}\n            </div> {/* div.flex-container ends */}\n          </div> {/* row ends */}\n        </div>  {/* text-container ends */}\n      </section>\n        );\n  }\n}","import React from 'react';\n\nconst Input = props => {\n  return (\n    <div className=\"form-group\">\n      <input\n        className=\"form-input\"\n        id={props.name}\n        name={props.name}\n        type={props.type}\n        value={props.value}\n        onChange={props.handleChange}\n        placeholder={props.placeholder}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Input from \"./common/Input\";\nexport default class ContactUs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", email: \"\", msg: \"\", loading: false };\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    let userData = this.state;\n    this.setState({ loading: true });\n    fetch(\"https://elementarycreative.com/send_form_email.php\", {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      console.log(\"Success\");\n    });\n  }\n  render() {\n    return (\n      <section id=\"contact\">\n        <div className=\"contactUsForm row\">\n          <div className=\"twelve section-head centerText columns\">\n            <h3 className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n            </h3>\n          </div>\n\n          <form>\n            <div className=\"columns six\">\n              <Input\n                id={\"name\"}\n                name={\"name\"}\n                type={\"text\"}\n                value={this.state.name}\n                handleChange={e => {\n                  this.setState({ name: e.target.value });\n                }}\n                placeholder={\"Name\"}\n              />\n            </div>\n            <div className=\"columns six\">\n              <Input\n                id={\"email\"}\n                name={\"email\"}\n                type={\"text\"}\n                value={this.state.email}\n                handleChange={e => {\n                  this.setState({ email: e.target.value });\n                }}\n                placeholder={\"Email\"}\n              />\n            </div>\n            <div className=\"columns twelve\">\n              <textarea\n                onChange={e => {\n                  this.setState({ msg: e.target.value });\n                }}\n                id={\"Message\"}\n                name={\"msg\"}\n                placeholder={\"Message\"}\n                value={this.state.msg}\n              />\n            </div>\n            <div className=\"columns centerText twelve\">\n              <button\n                onClick={e => {\n                  this.handleSubmit(e);\n                }}\n                id={\"Submit\"}\n                name={\"Submit\"}\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n    \"imagebaseurl\":\"https://sahilg14.github.io/\",\n    \"name\": \"Sahil Goyal\",\n    \"role\": \"Full Stack Software Engineer\",\n    \"linkedinId\":\"sahilg14\",\n    \"skypeid\": \"sahilg14\",\n    \"roleDescription\": \" I like to create applications that we can use in daily life. I like to learn about new technologies, trying different cuisines.\",\n    \"socialLinks\":[\n        {\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/in/sahilg14\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          \"name\":\"github\",\n          \"url\":\"http://github.com/sahilg14\",\n          \"className\":\"fa fa-github\"\n        },\n        {\n          \"name\":\"twitter\",\n          \"url\":\"http://twitter.com/sahilg14\",\n          \"className\":\"fa fa-twitter\"\n        }\n      ],\n    \"aboutme\":\"I am currently a full stack software engineer at a major Fintech in Canada. I am an electronics engineer, currently diving deeper into bringing hardware and software together to make something meaningfull. I believe that we must try to listen with the intent to understand , not to reply.\",\n    \"address\":\"Canada\",\n    \"website\":\"https://sahilg14.github.io/sahil\",\n    \"education\":[\n      {\n        \"UniversityName\":\"University of Windsor\",\n        \"specialization\":\"Electrical and Computer Engineering\",\n        \"MonthOfPassing\":\"Aug\",\n        \"YearOfPassing\":\"2016\",\n        \"Achievements\":\"Research Assistant at United way centraid Windsor-Essex County\"\n      },\n      {\n        \"UniversityName\":\"Panjab University\",\n        \"specialization\":\"Electronics and Communication Engineering\",\n        \"MonthOfPassing\":\"June\",\n        \"YearOfPassing\":\"2015\",\n        \"Achievements\":\"Robotics and Embedded Systems Circuit designing and Manufacturing\"\n      }\n    ],\n    \"work\":[\n      {\n        \"CompanyName\":\"Some Company\",\n        \"specialization\":\"Some specialization\",\n        \"MonthOfLeaving\":\"Jan\",\n        \"YearOfLeaving\":\"2018\",\n        \"Achievements\":\"Some Achievements\"\n      },\n      {\n        \"CompanyName\":\"Some Company\",\n        \"specialization\":\"Some specialization\",\n        \"MonthOfLeaving\":\"Jan\",\n        \"YearOfLeaving\":\"2018\",\n        \"Achievements\":\"Some Achievements\"\n      }\n    ],\n    \"skillsDescription\":\"Your skills here\",\n    \"skills\":[\n      {\n        \"skillname\":\"HTML5\"\n      },\n      {\n        \"skillname\":\"CSS\"\n      },\n      {\n        \"skillname\":\"Reactjs\"\n      }\n    ],\n    \"portfolio\":[\n      {\n        \"name\":\"London Top Tailoring\",\n        \"description\":\"I first met Hamid in London, Ontario. He asked me if i could help him with making an online presence for his clothing alterations business. I was very excited to work with him as this would be my first real world project. He started getting online enquiries, from day one given that he was already getting a lot of organic traffic in google business listings. I still take care of the maintainence of his website. \",\n        \"imgurl\":\"images/portfolio/bg2.jpg\",\n        \"link\":\"http://www.londontoptailoring.com/\"\n      },\n      {\n        \"name\":\"Velezfit\",\n        \"description\":\"Juan was very passionate about physical fitness and then he turned this passion in to motivation to build his business in personal training. He started with basic digital marketing like facebook and instagram ads, but then he realised he needed a portal with more information about his services that would keep the customers engaged and also take it to the next step. Making the sale ! He now does meal planning, online training sessions, and one on one training.\",\n        \"imgurl\":\"images/portfolio/p3.jpeg\",\n        \"link\": \"https://www.velezfit.com/\"\n      }\n    ],\n    \"testimonials\":[\n      {\n        \"description\":\"After Sahil redesigned our we site we a got lot of contracts. He not only has the skills to do the job but also he listens what you want to do and works hard to accomplish it. I highly recommend him to build or redesign your web site.\",\n        \"name\":\"Jorge Velez - Ezee Computer Training\"\n      },\n      {\n        \"description\":\"I had the pleasure of working with one of the easiest to deal with designers I’ve ever met. He was very open and listened to all my ideas while at the same time providing his suggestions and expertise. I would certainly work with him for any future ventures and I highly recommend the use of their services to anyone!\",\n        \"name\":\"Juan - Velezfit\"\n      }\n    ]\n  }\n  \n  export default resumeData;\n  ","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\nimport Testimonials from  './components/Testimonials';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        {false && <Resume resumeData={resumeData}/>}\n        <Portfolio resumeData={resumeData}/>\n        <Testimonials resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}